{"ast":null,"code":"import { ApolloServer } from 'apollo-server-micro';\nimport { mergeResolvers, mergeTypeDefs } from 'graphql-tools';\nimport connectionMongo from '../../src/server/database';\nimport { caseResolvers } from '../../src/graphql/resolvers';\nimport { caseMutations } from '../../src/graphql/mutations';\nvar Cases = \"type Case {\\n\\t_id: ID!\\n\\tinfecteds: Int!\\n\\tdeads: Int!\\n\\tstate: String!\\n\\tdate: String!\\n\\tregion: String!\\n}\\n\\ninput CaseInput {\\n\\tstate: String\\n\\tregion: String\\n}\\n\\ntype Mutation {\\n\\tupdateCases: Int\\n}\\n\\ntype Query {\\n\\tgetCases(caseInput: CaseInput): [Case!]!\\n}\\n\";\nconst resolvers = mergeResolvers([caseResolvers, caseMutations]);\nconst typeDefs = mergeTypeDefs([Cases]);\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nconst server = apolloServer.createHandler({\n  path: '/api/graphql'\n});\nexport default connectionMongo(server);","map":{"version":3,"sources":["/home/eduardo/projetos/covid/pages/api/graphql.js"],"names":["ApolloServer","mergeResolvers","mergeTypeDefs","connectionMongo","caseResolvers","caseMutations","resolvers","typeDefs","Cases","apolloServer","config","api","bodyParser","server","createHandler","path"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,eAA9C;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAGA,MAAMC,SAAS,GAAGL,cAAc,CAAC,CAACG,aAAD,EAAgBC,aAAhB,CAAD,CAAhC;AAEA,MAAME,QAAQ,GAAGL,aAAa,CAAC,CAACM,KAAD,CAAD,CAA9B;AAEA,MAAMC,YAAY,GAAG,IAAIT,YAAJ,CAAiB;AACrCO,EAAAA,QADqC;AAErCD,EAAAA;AAFqC,CAAjB,CAArB;AAKA,OAAO,MAAMI,MAAM,GAAG;AACrBC,EAAAA,GAAG,EAAE;AACJC,IAAAA,UAAU,EAAE;AADR;AADgB,CAAf;AAMP,MAAMC,MAAM,GAAGJ,YAAY,CAACK,aAAb,CAA2B;AACzCC,EAAAA,IAAI,EAAE;AADmC,CAA3B,CAAf;AAIA,eAAeZ,eAAe,CAACU,MAAD,CAA9B","sourcesContent":["import { ApolloServer } from 'apollo-server-micro';\nimport { mergeResolvers, mergeTypeDefs } from 'graphql-tools';\nimport connectionMongo from '../../src/server/database';\nimport { caseResolvers } from '../../src/graphql/resolvers';\nimport { caseMutations } from '../../src/graphql/mutations';\nimport Cases from '../../src/graphql/Cases.graphql';\n\nconst resolvers = mergeResolvers([caseResolvers, caseMutations]);\n\nconst typeDefs = mergeTypeDefs([Cases]);\n\nconst apolloServer = new ApolloServer({\n\ttypeDefs,\n\tresolvers,\n});\n\nexport const config = {\n\tapi: {\n\t\tbodyParser: false,\n\t},\n};\n\nconst server = apolloServer.createHandler({\n\tpath: '/api/graphql',\n});\n\nexport default connectionMongo(server);\n"]},"metadata":{},"sourceType":"module"}